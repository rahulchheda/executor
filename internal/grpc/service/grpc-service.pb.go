// Code generated by protoc-gen-go. DO NOT EDIT.
// source: executor/internal/proto-files/service/grpc-service.proto

package service

import (
	context "context"
	domain "executor/internal/grpc/domain"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status struct {
	CompletedStatus      bool     `protobuf:"varint,1,opt,name=CompletedStatus,proto3" json:"CompletedStatus,omitempty"`
	AnyError             *Error   `protobuf:"bytes,2,opt,name=AnyError,proto3" json:"AnyError,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed30111d62a0686, []int{0}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetCompletedStatus() bool {
	if m != nil {
		return m.CompletedStatus
	}
	return false
}

func (m *Status) GetAnyError() *Error {
	if m != nil {
		return m.AnyError
	}
	return nil
}

type Error struct {
	Code                 string   `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed30111d62a0686, []int{1}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Status)(nil), "service.Status")
	proto.RegisterType((*Error)(nil), "service.Error")
}

func init() {
	proto.RegisterFile("executor/internal/proto-files/service/grpc-service.proto", fileDescriptor_3ed30111d62a0686)
}

var fileDescriptor_3ed30111d62a0686 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x50, 0x4d, 0x4b, 0xc3, 0x40,
	0x14, 0x24, 0x45, 0xdb, 0x74, 0xfd, 0x08, 0xac, 0x97, 0x10, 0x44, 0x42, 0x4e, 0xa1, 0xd0, 0x2c,
	0x56, 0x14, 0x11, 0x3c, 0x68, 0xed, 0x51, 0x91, 0xf4, 0xe6, 0x41, 0x58, 0x93, 0x67, 0x5c, 0x48,
	0xf6, 0x85, 0xdd, 0x6d, 0xd1, 0xab, 0x7f, 0xc1, 0x9f, 0xe6, 0x5f, 0xf0, 0x87, 0x88, 0xbb, 0x49,
	0x0f, 0x0a, 0xde, 0x66, 0x66, 0xdf, 0xce, 0x7b, 0x33, 0xe4, 0x1c, 0x5e, 0xa1, 0x58, 0x19, 0x54,
	0x4c, 0x48, 0x03, 0x4a, 0xf2, 0x9a, 0xb5, 0x0a, 0x0d, 0x4e, 0x9f, 0x45, 0x0d, 0x9a, 0x69, 0x50,
	0x6b, 0x51, 0x00, 0xab, 0x54, 0x5b, 0x4c, 0x3b, 0x92, 0xd9, 0x01, 0x3a, 0xea, 0x68, 0x74, 0x58,
	0x21, 0x56, 0x35, 0x30, 0xde, 0x0a, 0xc6, 0xa5, 0x44, 0xc3, 0x8d, 0x40, 0xa9, 0xdd, 0x58, 0x74,
	0xf6, 0xff, 0x82, 0x12, 0x1b, 0x2e, 0xa4, 0xf3, 0x77, 0xd8, 0xfd, 0x4b, 0x1e, 0xc9, 0x70, 0x69,
	0xb8, 0x59, 0x69, 0x9a, 0x92, 0x60, 0x8e, 0x4d, 0x5b, 0x83, 0x81, 0xd2, 0x49, 0xa1, 0x17, 0x7b,
	0xa9, 0x9f, 0xff, 0x96, 0xe9, 0x84, 0xf8, 0x57, 0xf2, 0x6d, 0xa1, 0x14, 0xaa, 0x70, 0x10, 0x7b,
	0xe9, 0xce, 0x6c, 0x3f, 0xeb, 0x8f, 0xb6, 0x6a, 0xbe, 0x79, 0x4f, 0x4e, 0xc9, 0xb6, 0x05, 0x94,
	0x92, 0xad, 0x39, 0x96, 0x60, 0x3d, 0xc7, 0xb9, 0xc5, 0x34, 0x24, 0xa3, 0x5b, 0xd0, 0x9a, 0x57,
	0x60, 0x7d, 0xc6, 0x79, 0x4f, 0x67, 0xf7, 0x24, 0x58, 0x74, 0x81, 0x96, 0xce, 0x99, 0x5e, 0x92,
	0x91, 0x93, 0x80, 0xee, 0x66, 0x37, 0x2e, 0xc3, 0x1d, 0x6f, 0x20, 0x0a, 0x36, 0xcb, 0xdd, 0x7d,
	0xc9, 0xc1, 0xfb, 0xe7, 0xd7, 0xc7, 0x60, 0x2f, 0xf1, 0xd9, 0xfa, 0x98, 0x41, 0xf1, 0x82, 0x17,
	0xde, 0xe4, 0x3a, 0x7e, 0x38, 0xfa, 0x5b, 0xd1, 0x4f, 0x1f, 0x7d, 0xf9, 0x4f, 0x43, 0xdb, 0xc8,
	0xc9, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x55, 0x7a, 0x22, 0x50, 0xac, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExecutorServiceClient is the client API for ExecutorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExecutorServiceClient interface {
	Execute(ctx context.Context, in *domain.Name, opts ...grpc.CallOption) (*Status, error)
}

type executorServiceClient struct {
	cc *grpc.ClientConn
}

func NewExecutorServiceClient(cc *grpc.ClientConn) ExecutorServiceClient {
	return &executorServiceClient{cc}
}

func (c *executorServiceClient) Execute(ctx context.Context, in *domain.Name, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/service.ExecutorService/Execute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExecutorServiceServer is the server API for ExecutorService service.
type ExecutorServiceServer interface {
	Execute(context.Context, *domain.Name) (*Status, error)
}

// UnimplementedExecutorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedExecutorServiceServer struct {
}

func (*UnimplementedExecutorServiceServer) Execute(ctx context.Context, req *domain.Name) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Execute not implemented")
}

func RegisterExecutorServiceServer(s *grpc.Server, srv ExecutorServiceServer) {
	s.RegisterService(&_ExecutorService_serviceDesc, srv)
}

func _ExecutorService_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.Name)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutorServiceServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ExecutorService/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutorServiceServer).Execute(ctx, req.(*domain.Name))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExecutorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.ExecutorService",
	HandlerType: (*ExecutorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _ExecutorService_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "executor/internal/proto-files/service/grpc-service.proto",
}
